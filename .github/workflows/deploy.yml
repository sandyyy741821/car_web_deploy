name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Run pipeline when code is pushed to the main branch

jobs:
  lint:
    name: Run ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npx eslint . --ext .js

  analyze:
    name: Run SonarQube Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Sonar Scanner
        run: |
          sudo apt update
          sudo apt install -y unzip
          wget -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip
          sudo mv sonar-scanner-5.0.1.3006-linux /opt/sonar-scanner
          echo "export PATH=/opt/sonar-scanner/bin:$PATH" >> $GITHUB_ENV

      - name: Verify Sonar Scanner Installation
        run: sonar-scanner --version  # Check if sonar-scanner is installed correctly

      - name: Run SonarQube Analysis
        run: |
          sonar-scanner \
            -Dsonar.projectKey=car_web_deployment \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  deploy:
    name: Deploy to S3
    runs-on: ubuntu-latest
    needs: [lint, analyze]  # Run deployment only if lint & analyze succeed
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3
        run: aws s3 sync ./website s3://${{ secrets.S3_BUCKET_NAME }} --delete
